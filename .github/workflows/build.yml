name: build & test image

on:
  push:
    branches:
      - master
    paths:
      - 'application/**'
      - '.github/workflows/**'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO: gatus-app

jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: ecr uri
        id: ecr
        run: |
          ECR_URI=$(aws ecr describe-repositories --repository-names $ECR_REPO --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV

      - name: build docker image
        run: docker build -t gatus:latest ./application

      - name: security test image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gatus:latest
          format: table
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
      
      - name: test gatus container
        run: |
          docker run -d --rm --name gatus-app -p 8080:8080 gatus:latest
          sleep 10
          if [ "$(docker ps -q -f name=gatus-app)" ]; then
            echo "Up & running ðŸš€"
          else
            echo "Oh No! It failed ðŸš¨" && exit 1
          fi
          if curl --fail http://localhost:8080 > /dev/null; then
            echo "I am responding well ðŸŽ‰"
          else
            echo "I can't hear you buddy! ðŸ¥º" && exit 1
          fi
          docker stop gatus-app

      - name: tag docker container
        run: |
          docker tag gatus:latest $ECR_URI:latest

      - name: push docker image to ECR
        run: | 
          docker push $ECR_URI:latest